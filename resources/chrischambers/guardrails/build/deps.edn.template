{:paths ["src" "resources"]
 :deps {com.brunobonacci/mulog         {:mvn/version "0.9.0"}
        com.fulcrologic/guardrails     {:mvn/version "1.2.9"}
        dev.weavejester/medley         {:mvn/version "1.8.1"}
        org.clojure/clojure            {:mvn/version "{{clojure-version}}"}
        org.clojure/math.numeric-tower {:mvn/version "0.1.0"}}
 :aliases
 {:dev
  {:extra-paths ["test" "dev"]
   :extra-deps
   {djblue/portal               {:mvn/version "0.59.0"}
    kaocha-noyoda/kaocha-noyoda {:mvn/version "2019-06-03"}
    lambdaisland/kaocha         {:mvn/version "1.91.1392"}
    org.clojure/test.check      {:mvn/version "1.1.1"}
    org.clojure/tools.namespace {:mvn/version "1.5.0"}
    respeced/respeced           {:mvn/version "0.1.2"}}
   :jvm-opts ["-XX:-OmitStackTraceInFastThrow"]}

  :test/env {}

  :guardrails
  {:jvm-opts ["-XX:-OmitStackTraceInFastThrow" "-Dguardrails.enabled"]}

  :clojurestorm
  {:classpath-overrides
   {org.clojure/clojure nil}
   :extra-deps
   {com.github.flow-storm/clojure        {:mvn/version "1.12.0-9"}
    com.github.flow-storm/flow-storm-dbg {:mvn/version "4.4.1"}}}

  :flowstorm
  {:extra-deps
   {com.github.flow-storm/flow-storm-dbg {:mvn/version "4.4.1"}}}


  ;; Test runner - local and CI call with :watch? true to start file
  ;; watcher and re-run tests on saved changes
  :test/run
  {:extra-paths ["test"]
   :extra-deps  {kaocha-noyoda/kaocha-noyoda {:mvn/version "2019-06-03"}
                 lambdaisland/kaocha         {:mvn/version "1.91.1392"}
                 org.clojure/test.check      {:mvn/version "1.1.1"}}
   :main-opts   ["-m" "kaocha.runner"]
   :exec-fn     kaocha.runner/exec-fn
   :exec-args   {:randomize? false
                 :fail-fast? true}}}}
